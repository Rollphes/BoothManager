name: Update PuppeteerSharp

env:
  targetDirectory: Runtime/Nuget
  framework: netstandard2.0

on:
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:

jobs:
  install-and-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Check for PuppeteerSharp updates
        id: check
        run: |
          latest_version=$(nuget list PuppeteerSharp -Source "https://api.nuget.org/v3/index.json" | grep 'PuppeteerSharp' | awk '{print $2}' | sort -V | tail -n 1)
          current_version=$(find "${{ env.targetDirectory }}" -type d -name "PuppeteerSharp*" | grep -oP '(?<=PuppeteerSharp\.)\d+(\.\d+)*' | sort -V | tail -n 1)
          if [ -z "$current_version" ]; then
            current_version="0.0.0"
          fi
          echo "latest_version=$latest_version" >> $GITHUB_ENV
          echo "current_version=$current_version" >> $GITHUB_ENV

          if [ "$latest_version" != "$current_version" ]; then
            echo "::set-output name=update_needed::true"
          else
            echo "::set-output name=update_needed::false"
          fi
        shell: bash

      - name: Delete old PuppeteerSharp files
        if: steps.check.outputs.update_needed == 'true'
        run: rm -rf "${{ env.targetDirectory }}"
        shell: bash

      - name: Install PuppeteerSharp@latest
        if: steps.check.outputs.update_needed == 'true'
        run: nuget install PuppeteerSharp -OutputDirectory "${{ env.targetDirectory }}"
        shell: bash

      - name: Organising dll files
        if: steps.check.outputs.update_needed == 'true'
        run: |
          for dir in "${{ env.targetDirectory }}"/*; do
            for libDir in "$dir"/lib/*; do
              if [[ "$(basename "$libDir")" == "${{ env.framework }}" ]]; then
                cp "$libDir"/*.dll "$dir/"
              fi
            done
            for file in "$dir"/*; do
              if [[ ! "$file" =~ \.(dll|[Ll]icense|LICENSE)$ ]]; then
                rm -rf "$file"
              fi
            done
            if [[ -f "$dir/.signature.p7s" ]]; then
              rm -f "$dir/.signature.p7s"
            fi
          done
        shell: bash

      - name: Create Pull Request
        if: steps.check.outputs.update_needed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: 'Update PuppeteerSharp to latest version'
          delete-branch: true
          base: main
          title: 'Update PuppeteerSharp to latest version'
          body: 'This PR updates PuppeteerSharp to the latest version.'
